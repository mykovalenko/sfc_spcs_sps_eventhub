SET DBS = '<% dbsname %>';
SET XMA = '<% depname %>';
SET SVC = '<% depname %>_SVC';
SET USR = '<% depname %>_USR';
SET ROL = '<% depname %>_ROL';
SET CPL = '<% depname %>_CPL';
SET VWH = '<% depname %>_VWH';
SET NRL = '<% depname %>_NRL';
SET EAI = '<% depname %>_EAI';

---------------------------------------------------------------------------------
USE ROLE IDENTIFIER($ROL);
USE DATABASE IDENTIFIER($DBS);
USE SCHEMA IDENTIFIER($XMA);
USE WAREHOUSE IDENTIFIER($VWH);

LIST @SPECS PATTERN='.*yaml';
REMOVE @SPECS PATTERN='.*yaml';
PUT file://img/service.yaml @SPECS AUTO_COMPRESS=FALSE OVERWRITE=TRUE; 

LIST @VOLUMES PATTERN='.*properties';
REMOVE @VOLUMES PATTERN='.*properties';
PUT file://img/snowflake.properties @VOLUMES AUTO_COMPRESS=FALSE OVERWRITE=TRUE; 
PUT file://img/eventhub.properties @VOLUMES AUTO_COMPRESS=FALSE OVERWRITE=TRUE; 

DESC COMPUTE POOL IDENTIFIER($CPL);
--ALTER COMPUTE POOL IF EXISTS IDENTIFIER($CPL) SUSPEND;
ALTER COMPUTE POOL IF EXISTS IDENTIFIER($CPL) RESUME IF SUSPENDED;

ALTER SERVICE IF EXISTS IDENTIFIER($SVC) SUSPEND;
--ALTER SERVICE IF EXISTS IDENTIFIER($SVC) RESUME;

DROP SERVICE IF EXISTS IDENTIFIER($SVC);
CREATE SERVICE IDENTIFIER($SVC)
  IN COMPUTE POOL IDENTIFIER($CPL)
  FROM @SPECS
  SPECIFICATION_FILE = 'service.yaml'
  EXTERNAL_ACCESS_INTEGRATIONS = ($EAI)
  MIN_INSTANCES = 1
  MAX_INSTANCES = 1
;

SHOW SERVICES;

-- wait for endpoints to be provisioned
CALL SYSTEM$WAIT(1, 'MINUTES');

-- check the status of service
CALL SYSTEM$GET_SERVICE_STATUS($SVC);
